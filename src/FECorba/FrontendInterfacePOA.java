package FECorba;


/**
* FECorba/FrontendInterfacePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from FECorba.idl
* Saturday, July 25, 2020 3:53:10 o'clock PM EDT
*/

public abstract class FrontendInterfacePOA extends org.omg.PortableServer.Servant
 implements FECorba.FrontendInterfaceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getPlayerStatus", new java.lang.Integer (0));
    _methods.put ("suspendAccount", new java.lang.Integer (1));
    _methods.put ("createPlayerAccount", new java.lang.Integer (2));
    _methods.put ("playerSignIn", new java.lang.Integer (3));
    _methods.put ("playerSignOut", new java.lang.Integer (4));
    _methods.put ("transferAccount", new java.lang.Integer (5));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  // AdminInterface corba idl methods
       case 0:  // FECorba/FrontendInterface/getPlayerStatus
       {
         String userName = in.read_string ();
         String password = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.getPlayerStatus (userName, password, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // FECorba/FrontendInterface/suspendAccount
       {
         String AdminUsername = in.read_string ();
         String AdminPassword = in.read_string ();
         String AdminIP = in.read_string ();
         String UsernameToSuspend = in.read_string ();
         String $result = null;
         $result = this.suspendAccount (AdminUsername, AdminPassword, AdminIP, UsernameToSuspend);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  // PlayerInterface corba idl methods
       case 2:  // FECorba/FrontendInterface/createPlayerAccount
       {
         String firstName = in.read_string ();
         String lastName = in.read_string ();
         String age = in.read_string ();
         String userName = in.read_string ();
         String password = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.createPlayerAccount (firstName, lastName, age, userName, password, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // FECorba/FrontendInterface/playerSignIn
       {
         String userName = in.read_string ();
         String password = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.playerSignIn (userName, password, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // FECorba/FrontendInterface/playerSignOut
       {
         String userName = in.read_string ();
         String ipAddress = in.read_string ();
         String $result = null;
         $result = this.playerSignOut (userName, ipAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // FECorba/FrontendInterface/transferAccount
       {
         String userName = in.read_string ();
         String password = in.read_string ();
         String OldIPAddress = in.read_string ();
         String NewIPAddress = in.read_string ();
         String $result = null;
         $result = this.transferAccount (userName, password, OldIPAddress, NewIPAddress);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:FECorba/FrontendInterface:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public FrontendInterface _this() 
  {
    return FrontendInterfaceHelper.narrow(
    super._this_object());
  }

  public FrontendInterface _this(org.omg.CORBA.ORB orb) 
  {
    return FrontendInterfaceHelper.narrow(
    super._this_object(orb));
  }


} // class FrontendInterfacePOA
